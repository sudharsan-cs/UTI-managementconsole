$(document).on({
  ajaxStart: function () {
    $("body").addClass("loading");
  },
  ajaxStop: function () {
    $("body").removeClass("loading");
  },
});

$(document).ready(function () {
  let malwareName = null;
  var updateEventTable = async function () {
    var viewPt = $("#viewpoint");
    // tbody.empty();
    const response = await getTechniqueInfo();
    $("#malwareTitle").text(response[0]["name"]);
    $("#malwareDesc").text(response[0]["description"]);

    $("#categoryID").text(response[0]["malware_category"]);
    $("#mitreLabel").text(response[0]["labels"].join(", "));
    $("#mitreType").text(response[0]["type"]);
    $("#mitreModified").text(response[0]["modified"]);
    $("#mitreCreated").text(response[0]["created"]);
    const techIds = [];
    response[0]["technicalData"].map((data) => {
      data = data.ID.split(".")[0];
      techIds.push(data);
    });
    if (techIds.length > 0) {
      const attackmap = await getAttackMapping(techIds);
      let table1Data = "";
      for (var idx = 0; idx < attackmap["numberofRows"]; idx++) {
        table1Data +=
          "<tr>" +
          "<td>" +
          (attackmap["tableData"]["reconnaissance"][idx]
            ? formatTD(attackmap['desc'][attackmap["tableData"]["reconnaissance"][idx]])
            : "") +
          "</td>"+
          "<td>" +
          (attackmap["tableData"]["resource-development"][idx]
            ? formatTD(attackmap['desc'][attackmap["tableData"]["resource-development"][idx]])
            : "") +
          "</td>"+
          "<td>" +
          (attackmap["tableData"]["initial-access"][idx]
            ? formatTD(attackmap['desc'][attackmap["tableData"]["initial-access"][idx]])
            : "") +
          "</td>"+
          "<td>" +
          (attackmap["tableData"]["execution"][idx]
            ? formatTD(attackmap['desc'][attackmap["tableData"]["execution"][idx]])
            : "") +
          "</td>"+
          "<td>" +
          (attackmap["tableData"]["persistence"][idx]
            ? formatTD(attackmap['desc'][attackmap["tableData"]["persistence"][idx]])
            : "") +
          "</td>" +
          "<td>" +
          (attackmap["tableData"]["privilege-escalation"][idx]
            ? formatTD(attackmap['desc'][attackmap["tableData"]["privilege-escalation"][idx]])
            : "") +
          "</td>" +
          "<td>" +
          (attackmap["tableData"]["defense-evasion"][idx]
            ? formatTD(attackmap['desc'][attackmap["tableData"]["defense-evasion"][idx]])
            : "") +
          "</td>" +
          "<td>" +
          (attackmap["tableData"]["credential-access"][idx]
            ? formatTD(attackmap['desc'][attackmap["tableData"]["credential-access"][idx]])
            : "") +
          "</td>" +
          "<td>" +
          (attackmap["tableData"]["discovery"][idx]
            ?formatTD(attackmap['desc'][attackmap["tableData"]["discovery"][idx]])
            : "") +
          "</td>" +
          "<td>" +
          (attackmap["tableData"]["lateral-movement"][idx]
            ? formatTD(attackmap['desc'][attackmap["tableData"]["lateral-movement"][idx]])
            : "") +
          "</td>" +
          "<td>" +
          (attackmap["tableData"]["collection"][idx]
            ? formatTD(attackmap['desc'][attackmap["tableData"]["collection"][idx]])
            : "") +
          "</td>" +
          "<td>" +
          (attackmap["tableData"]["command-and-control"][idx]
            ? formatTD(attackmap['desc'][attackmap["tableData"]["command-and-control"][idx]])
            : "") +
          "</td>" +
          "<td>" +
          (attackmap["tableData"]["exfiltration"][idx]
            ? formatTD(attackmap['desc'][attackmap["tableData"]["exfiltration"][idx]])
            : "") +
          "</td>" +
          "<td>" +
          (attackmap["tableData"]["impact"][idx]
            ? formatTD(attackmap['desc'][attackmap["tableData"]["impact"][idx]])
            : "") +
          "</td>" +
          "</tr>";
      }
      var table1 = $("#table1_attackMap");
      table1.append(table1Data);
    }

    $.each(response[0]["technicalData"], async function (i, item) { 
      let data = TECHNIQUEROW1;
      data = data.replace("${id}", item.ID.split(".")[0]);
      data = data.replace(
        "${para}",
        item.description
          ? item.description
          : `-`
      );
      data = data.replace("${tactic}", (item.Tactics)?item.Tactics:' - ');
      data = data.replace("${platforms}", item.Platforms);
      data = data.replace("${contributors}", (item.Contributors)?item.Contributors:' - ');
      data = data.replace("${version}", item.Version);
      data = data.replace("${modifiedAt}", item['Last Modified']);
      data = data.replace("${createdAt}", item.Created);
      const getTechDetails = await getTechniqueDetails(item.ID);
      // Get Sub Technique
      let dataSubTech = TECHNIQUEROW2;
      if (getTechDetails[0]["subTechniqueData"].length > 0) {
        let tableRow = "";
        $.each(getTechDetails[0]["subTechniqueData"], async function (i, item) {
          tableRow += "<tr>";
          tableRow += "<td>" + item.ID + "</td>";
          tableRow += "<td>" + item.Name + "</td>";
          tableRow += "</tr>";
        });
        dataSubTech = dataSubTech.replace("${subTechniqueTablebody}", tableRow);
        data = data.replace("${subTechniqueDiv}", dataSubTech);
      } else {
        dataSubTech = dataSubTech.replace("${subTechniqueTablebody}", "");
        data = data.replace("${subTechniqueDiv}", "");
      }
      // Get Mitigation
      let dataMitigation = TECHNIQUEROW3;
      if (getTechDetails[0]["mitigationData"].length > 0) {
        let tableRow = "";
        $.each(getTechDetails[0]["mitigationData"], async function (i, item) {
          tableRow += "<tr>";
          tableRow += "<td>" + item.ID + "</td>";
          tableRow += "<td>" + item.Mitigation + "</td>";
          tableRow += "<td>" + item.Description + "</td>";
          tableRow += "</tr>";
        });
        dataMitigation = dataMitigation.replace(
          "${mitigationTablebody}",
          tableRow
        );
        data = data.replace("${mitigationDiv}", dataMitigation);
      } else {
        dataMitigation = dataMitigation.replace("${mitigationTablebody}", "");
        data = data.replace("${mitigationDiv}", "");
      }
      // Get Detection
      let dataDetection = TECHNIQUEROW4;
      if (getTechDetails[0]["detectionData"].length > 0) {
        let tableRow = "";
        $.each(getTechDetails[0]["detectionData"], async function (i, item) {
          tableRow += "<tr>";
          tableRow += "<td>" + item.ID + "</td>";
          tableRow += "<td>" + item.Detects + "</td>";
          tableRow += "<td>" + item["Data Component"] + "</td>";
          tableRow += "</tr>";
        });
        dataDetection = dataDetection.replace(
          "${detectionTablebody}",
          tableRow
        );
        data = data.replace("${detectionDiv}", dataDetection);
      } else {
        dataDetection = dataDetection.replace("${detectionTablebody}", "");
        data = data.replace("${detectionDiv}", "");
      }
      viewPt.append(data);
    });
  };

  async function getAttackMapping(techIds) {
    return await $.ajax({
      url: "https://localhost:3000/ms/attackmap/v1",
      type: "POST",
      data: {
        techId: techIds,
      },
      success: async function (response) {
        return response;
      },
    });
  }

  async function getTechniqueInfo() {
    const params = new URLSearchParams(window.location.search);
    const id = params.get("id");
    return await $.ajax({
      url: "https://localhost:3000/ms/mitremalware/info/v1",
      type: "POST",
      data: {
        mitreId: id,
        malwareQuery: null,
      },
      success: async function (response) {
        return response;
      },
    });
  }

  function formatTD(text){
    text = text.split('(');
    const data = `<center>\
        <span>${text[0]}</span><br>\
        <span>\
            <span style='background-color:#00ffe5';>(${text[1]}</span>\
        </span>\
    </center>`;
    return data;
  }

  async function getTechniqueDetails(techId) {
    return await $.ajax({
      url: "https://localhost:3000/ms/technique/info/v1",
      type: "POST",
      data: {
        techId: techId,
        malwareQuery: null,
      },
      success: function (response) {
        return response;
      },
    });
  }
  var malwareQuery = null;
  const limit = 10;
  var page = 0;
  updateEventTable();

  $("#nextTable").on("click", function () {
    nextPage();
  });
  $("#previousTable").on("click", function () {
    previousPage();
  });
  $("#search").on("click", function () {
    searchData();
  });

  $(".pdf-download").on("click", function () {
    const params = new URLSearchParams(window.location.search);
    const id = params.get("id");
    $.ajax({
      url: "https://localhost:3000/ms/mitremalware/download/v1",
      type: "POST",
      data: {
        mitreId: id,
        malwareQuery: null,
      },
      xhrFields: {
        responseType: "blob",
      },
      success: function (response) {
        var a = document.createElement("a");
        var url = window.URL.createObjectURL(response);
        a.href = url;
        a.download = "MitreMalware.pdf";
        document.body.append(a);
        a.click();
        a.remove();
        window.URL.revokeObjectURL(url);
      },
    });
  });

  var updateIoCEventTable = async function () {
    const malware = await getTechniqueInfo();
    $.ajax({
      url: "https://localhost:3000/ms/ioc/info/v1",
      type: "POST",
      data: {
        start: page * limit,
        limit: limit,
        iocQuery: malwareQuery ? malwareQuery : null,
        mandatoryId: malware[0].name ? malware[0].name : null,
      },
      success: function (response) {
        var trHTML = "";
        $.each(response, function (i, item) {
          trHTML +=
          '<tr class="removeable event-row" event_id =' +
          item.ioc_value +
          "><td>" +
          item.ioc_type +
          "</td><td>" +
          item.threat_type +
          "</td><td>" +
          item.malware +
          "</td><td>" +
          item.malware_alias +
          "</td><td>" +
          item.malware_printable +
          "</td><td>" +
         ( (item.malware_printable && item.malware_printable!== null)?item.malware_printable:'-') +
          "</td><td>" +
          item.first_seen_utc +
          "</td><td>" +
          ((item.last_seen_utc)?item.last_seen_utc: '-') +
          " </td><td>" +
          item.confidence_level +
          " </td><td>" +
            '<a target="_blank" href="'+item.reference +'" class="fa-solid fa-file-chart-column event-selector-download">Link</a>'
            +
          " </td><td>" +
          ( (item.tags && item.tags!== null)?item.tags:'-') +
          " </td><td>" +
          item.anonymous +
          " </td><td>" +
          item.reporter +
          " </td> " +
          "</tr>";
        });
        $(".removeable").remove();
        if (response.length > 0) {
          $("#records_ioc_table").append(trHTML);
        }
      },
    });
  };
  var nextPage = function () {
    page = page + 1;
    updateIoCEventTable();
  };

  var previousPage = function () {
    if (page !== 0) {
      page = page - 1;
      updateIoCEventTable();
    }
  };
  var searchData = function () {
    page = 0;
    malwareQuery = $("#searchbox").val();
    updateIoCEventTable();
  };

  updateIoCEventTable();
});

const TECHNIQUEROW1 =
  '<div class="report-section row"><div class="col s12 m6"><p>${para}</p></div><div class="col s12 m6"><div class="table-wrapper"><table id="details_table" class="striped"><thead><tr><th>Detail</th><th>Value</th></tr></thead><tbody><tr><td>ID</td><td>${id}</td></tr><tr><td>Tactic</td><td>${tactic}</td></tr><tr><td>Platforms</td><td>${platforms}</td></tr><tr><td>Contributors</td><td>${contributors}</td></tr><tr><td>Version</td><td>${version}</td></tr><tr><td>Modified At</td><td>${modifiedAt}</td></tr><tr><td>Created At</td><td>${createdAt}</td></tr></tbody></table></div></div> ${subTechniqueDiv} ${detectionDiv} ${mitigationDiv} </div>';
const TECHNIQUEROW2 =
  '<div class="row"><h5>Sub Technique(s)</h5><div class="table-wrapper"><table id="records_table"><thead><tr><th>ID</th><th>SubTechnique</th></tr></thead><tbody>${subTechniqueTablebody}</tbody></table></div></div>';
const TECHNIQUEROW3 =
  '<div class="row"><h5>Mitigations(s)</h5><div class="table-wrapper"><table id="records_table"><thead><tr><th>ID</th><th>Mitigation</th><th>Description</th></tr></thead><tbody>${mitigationTablebody}</tbody></table></div></div>';
const TECHNIQUEROW4 =
  '<div class="row"><h5>Detection(s)</h5><div class="table-wrapper"><table id="records_table"><thead><tr><th>ID</th><th>Detects</th><th>Data Components</th></tr></thead><tbody>${detectionTablebody}</tbody></table></div></div>';
